name: CI

on: [ push, pull_request ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0

      - name: Install UV and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv==0.5.7
          uv pip install -e '.[dev,test]' --system
          uv pip install pytest-cov --system

      - name: Format code
        run: |
          ruff format

      - name: Lint code
        run: |
          ruff check --exit-non-zero-on-fix
          mypy

      - name: Test code
        run: |
          pytest --cov=config --cov-branch --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Test config generation with APP_ENV
        run: |
          export APP_ENV=local
          python config/toml_config_manager.py

      - name: Test read_config.py with APP_ENV
        run: |
          export APP_ENV=local
          python examples/read_config.py

      - name: Test Docker build and run with config
        run: |
          docker build -t config-test-app -f examples/Dockerfile .
          docker run -e APP_ENV=local --rm config-test-app

      - name: Test Docker Compose setup
        run: |
          export APP_ENV=local
          python config/toml_config_manager.py
          cd config/local
          echo "Generated .env.local content:"
          cat .env.local
          export COMPOSE_ENV_FILES=.env.local

          docker compose up -d app_db_pg
          timeout 30s bash -c 'until docker compose ps | grep -q "healthy"; do sleep 1; done'
          docker compose logs
          docker compose down -v
